openapi: 3.0.3
info:
  title: Account API Documentation
  description: API documentation for account-related endpoints.
  version: 1.0.0
servers:
  - url: https://your-api-url.com
tags:
  - name: Account
    description: Operations related to user login, registration, and account management
paths:
  /api/account/login:
    post:
      tags:
        - Account
      summary: Logs user into the system
      description: Endpoint to log in a user.
      operationId: loginUser
      requestBody:
        description: User credentials for login
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password
  /api/account/logout:
    post:
      tags:
        - Account
      summary: Logs out current logged in user session
      description: Endpoint to log out the current user session.
      operationId: logoutUser
      responses:
        '200':
          description: Successful logout
  /api/account/register:
    post:
      tags:
        - Account
      summary: Register a new user
      description: Endpoint to register a new user.
      operationId: registerUser
      requestBody:
        description: Process to register a new user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  format: text
                  example: john
                lastname:
                  type: string
                  format: text
                  example: doe    
                email:
                  type: string
                  format: email
                  example: example@example.com
                password:
                  type: string
                  format: text
                  example: password    
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/account/resend:
    post:
      tags:
        - Account
      summary: Resend verification email
      description: Endpoint to resend verification email.
      operationId: resendVerificationEmail
      requestBody:
        description: Email to resend verification email to
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@example.com
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /api/account/reset-password:
    post:
      tags:
        - Account
      summary: Reset user password
      description: Endpoint to reset user password.
      operationId: resetPassword
      requestBody:
        description: Password reset request object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@example.com
                token:
                  type: string
                  example: reset_token_here
                newPassword:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /api/account/user:
    get:
      tags:
        - Account
      summary: Get user details
      description: Endpoint to get user details.
      operationId: getUserDetails
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/account/verify-email:
    post:
      tags:
        - Account
      summary: Verify user email
      description: Endpoint to verify user email.
      operationId: verifyEmail
      requestBody:
        description: Verification token and email
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: verification_token_here
                email:
                  type: string
                  format: email
                  example: example@example.com
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /api/account/verify-jwt:
    get:
      tags:
        - Account
      summary: Verify JWT token
      description: Endpoint to verify JWT token.
      operationId: verifyJWT
      parameters:
        - name: token
          in: query
          description: JWT token to verify
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: user123
        email:
          type: string
          format: email
          example: user@example.com
      required:
        - username
        - email
